{"ast":null,"code":"var _jsxFileName = \"/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/frontend/src/pages/NotesListPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ListItem from \"../components/ListItem\";\nimport AddButton from \"../components/AddButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotesListPage = () => {\n  _s();\n\n  //initial state\n  let [notes, setNotes] = useState([]);\n  useEffect(() => {\n    getNotes();\n  }, []); //function to get notes from the backend\n\n  let getNotes = async () => {\n    let response = await fetch(\"/api/notes\"); // waits until this is done before going to the next method\n\n    let data = await response.json();\n    setNotes(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"notes-title\",\n        children: \"\\u2636 Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"notes-count\",\n        children: notes.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-list\",\n      children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        note: note\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotesListPage, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n\n_c = NotesListPage;\nexport default NotesListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotesListPage\");","map":{"version":3,"sources":["/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/frontend/src/pages/NotesListPage.js"],"names":["React","useState","useEffect","ListItem","AddButton","NotesListPage","notes","setNotes","getNotes","response","fetch","data","json","length","map","note","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B;AACA,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT,CAJ0B,CAQ1B;;AACA,MAAIA,QAAQ,GAAG,YAAY;AACzB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,CAA1B,CADyB,CACiB;;AAE1C,QAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AAEAL,IAAAA,QAAQ,CAACI,IAAD,CAAR;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA,kBAA4BL,KAAK,CAACO;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACGP,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT,QAAC,QAAD;AAAsB,QAAA,IAAI,EAAED;AAA5B,SAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALF,eAUE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA/BD;;GAAMX,a;;KAAAA,a;AAiCN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ListItem from \"../components/ListItem\";\nimport AddButton from \"../components/AddButton\";\n\nconst NotesListPage = () => {\n  //initial state\n  let [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    getNotes();\n  }, []);\n\n  //function to get notes from the backend\n  let getNotes = async () => {\n    let response = await fetch(\"/api/notes\"); // waits until this is done before going to the next method\n\n    let data = await response.json();\n\n    setNotes(data);\n  };\n\n  return (\n    <div className=\"notes\">\n      <div className=\"notes-header\">\n        <h2 className=\"notes-title\">&#9782; Notes</h2>\n        <p className=\"notes-count\">{notes.length}</p>\n      </div>\n      <div className=\"notes-list\">\n        {notes.map((note, index) => (\n          <ListItem key={index} note={note} />\n        ))}\n      </div>\n      <AddButton />\n    </div>\n  );\n};\n\nexport default NotesListPage;\n"]},"metadata":{},"sourceType":"module"}