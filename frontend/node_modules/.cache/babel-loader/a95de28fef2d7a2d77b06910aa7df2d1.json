{"ast":null,"code":"var _jsxFileName = \"/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/frontend/src/pages/NotesListPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotesListPage = () => {\n  _s();\n\n  //initial state\n  let [notes, setNotes] = useState([]);\n  useEffect(() => {\n    getNotes();\n  }, []); //function to get notes from the backend\n\n  let getNotes = async () => {\n    let response = await fetch(\"127.0.0.1:8000/api/\"); // waits until this is done before going to the next method\n\n    let data = await response.json(); //console.log(\"DATA: \", data);\n    //setNotes(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Notes\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n\n_s(NotesListPage, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n\n_c = NotesListPage;\nexport default NotesListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotesListPage\");","map":{"version":3,"sources":["/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/frontend/src/pages/NotesListPage.js"],"names":["React","useState","useEffect","NotesListPage","notes","setNotes","getNotes","response","fetch","data","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B;AACA,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT,CAJ0B,CAQ1B;;AACA,MAAIA,QAAQ,GAAG,YAAY;AACzB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAD,CAA1B,CADyB,CAC0B;;AAEnD,QAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB,CAHyB,CAIzB;AACA;AACD,GAND;;AAQA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAlBD;;GAAMP,a;;KAAAA,a;AAoBN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst NotesListPage = () => {\n  //initial state\n  let [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    getNotes();\n  }, []);\n\n  //function to get notes from the backend\n  let getNotes = async () => {\n    let response = await fetch(\"127.0.0.1:8000/api/\"); // waits until this is done before going to the next method\n\n    let data = await response.json();\n    //console.log(\"DATA: \", data);\n    //setNotes(data);\n  };\n\n  return <div>Notes</div>;\n};\n\nexport default NotesListPage;\n"]},"metadata":{},"sourceType":"module"}