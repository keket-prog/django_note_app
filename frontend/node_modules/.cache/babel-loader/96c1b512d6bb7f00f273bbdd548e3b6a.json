{"ast":null,"code":"import React from\"react\";import{Link}from\"react-router-dom\";//trims the note to review just a title\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var getTitle=function getTitle(note){var title=note.body.split(\"\\n\")[0];if(title.length>45){return title.slice(0,45);}return title;};//Display time on the note\nvar getTime=function getTime(note){return new Date(note.updated).toLocaleDateString();};var ListItem=function ListItem(_ref){var note=_ref.note;return/*#__PURE__*/_jsx(Link,{to:\"/note/\".concat(note.id),children:/*#__PURE__*/_jsxs(\"div\",{className:\"notes-list-item\",children:[/*#__PURE__*/_jsx(\"h3\",{children:getTitle(note)}),/*#__PURE__*/_jsx(\"p\",{children:getTime(note)})]})});};export default ListItem;","map":{"version":3,"sources":["/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/notes_app/frontend/src/components/ListItem.js"],"names":["React","Link","getTitle","note","title","body","split","length","slice","getTime","Date","updated","toLocaleDateString","ListItem","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA;wFACA,GAAIC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAU,CACvB,GAAIC,CAAAA,KAAK,CAAGD,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgB,IAAhB,EAAsB,CAAtB,CAAZ,CAEA,GAAIF,KAAK,CAACG,MAAN,CAAe,EAAnB,CAAuB,CACrB,MAAOH,CAAAA,KAAK,CAACI,KAAN,CAAY,CAAZ,CAAe,EAAf,CAAP,CACD,CACD,MAAOJ,CAAAA,KAAP,CACD,CAPD,CASA;AACA,GAAIK,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACN,IAAD,CAAU,CACtB,MAAO,IAAIO,CAAAA,IAAJ,CAASP,IAAI,CAACQ,OAAd,EAAuBC,kBAAvB,EAAP,CACD,CAFD,CAIA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAc,IAAXV,CAAAA,IAAW,MAAXA,IAAW,CAC7B,mBACE,KAAC,IAAD,EAAM,EAAE,iBAAWA,IAAI,CAACW,EAAhB,CAAR,uBACE,aAAK,SAAS,CAAC,iBAAf,wBACE,oBAAKZ,QAAQ,CAACC,IAAD,CAAb,EADF,cAEE,mBAAIM,OAAO,CAACN,IAAD,CAAX,EAFF,GADF,EADF,CAQD,CATD,CAWA,cAAeU,CAAAA,QAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n//trims the note to review just a title\nlet getTitle = (note) => {\n  let title = note.body.split(\"\\n\")[0];\n\n  if (title.length > 45) {\n    return title.slice(0, 45);\n  }\n  return title;\n};\n\n//Display time on the note\nlet getTime = (note) => {\n  return new Date(note.updated).toLocaleDateString();\n};\n\nconst ListItem = ({ note }) => {\n  return (\n    <Link to={`/note/${note.id}`}>\n      <div className=\"notes-list-item\">\n        <h3>{getTitle(note)}</h3>\n        <p>{getTime(note)}</p>\n      </div>\n    </Link>\n  );\n};\n\nexport default ListItem;\n"]},"metadata":{},"sourceType":"module"}