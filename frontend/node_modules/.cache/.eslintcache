[{"/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/notes_app/frontend/src/index.js":"1","/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/notes_app/frontend/src/App.js":"2","/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/notes_app/frontend/src/reportWebVitals.js":"3","/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/notes_app/frontend/src/components/Header.js":"4","/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/notes_app/frontend/src/pages/NotesListPage.js":"5","/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/notes_app/frontend/src/pages/NotePage.js":"6","/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/notes_app/frontend/src/components/AddButton.js":"7","/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/notes_app/frontend/src/components/ListItem.js":"8"},{"size":550,"mtime":1644989812684,"results":"9","hashOfConfig":"10"},{"size":533,"mtime":1643908806499,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1643557733974,"results":"12","hashOfConfig":"10"},{"size":164,"mtime":1644232452480,"results":"13","hashOfConfig":"10"},{"size":944,"mtime":1644428616027,"results":"14","hashOfConfig":"10"},{"size":2312,"mtime":1644759260829,"results":"15","hashOfConfig":"10"},{"size":303,"mtime":1644428352556,"results":"16","hashOfConfig":"10"},{"size":613,"mtime":1644759626916,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ykx165",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/notes_app/frontend/src/index.js",["43"],[],"/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/notes_app/frontend/src/App.js",[],[],"/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/notes_app/frontend/src/reportWebVitals.js",[],[],"/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/notes_app/frontend/src/components/Header.js",[],[],"/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/notes_app/frontend/src/pages/NotesListPage.js",[],[],"/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/notes_app/frontend/src/pages/NotePage.js",["44","45"],[],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { ReactComponent as ArrowLeft } from \"../assets/chevron-back-outline.svg\";\nimport { Link } from \"react-router-dom\";\n\nconst NotePage = () => {\n  let noteId = useParams().id;\n  let [note, setNote] = useState([null]);\n  let history = useNavigate();\n\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n\n  let getNote = async () => {\n    if (noteId === \"new\") return; // if the route is /note/new then don't make api request to backend\n    let response = await fetch(`/api/notes/${noteId}/`);\n    let data = await response.json();\n    setNote(data);\n  };\n\n  let createNote = async () => {\n    fetch(`/api/notes/create/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(note),\n    });\n  };\n\n  let updateNote = async () => {\n    fetch(`/api/notes/${noteId}/update/`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(note),\n    });\n  };\n\n  let deleteNote = async () => {\n    fetch(`/api/notes/${noteId}/delete/`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    history(\"/\");\n  };\n\n  let handleSubmit = () => {\n    if (noteId !== \"new\" && note.body === \"\") {\n      deleteNote();\n    } else if (noteId !== \"new\") {\n      updateNote();\n    } else if (noteId === \"new\" && note.body !== null) {\n      createNote();\n    }\n    history(\"/\");\n  };\n  return (\n    <div className=\"note\">\n      <div className=\"note-header\">\n        <h3>\n          <ArrowLeft onClick={handleSubmit} />\n        </h3>\n        {noteId !== \"new\" ? (\n          <button onClick={deleteNote}>Delete</button>\n        ) : (\n          <button onClick={handleSubmit}>Done</button>\n        )}\n      </div>\n      <textarea\n        onChange={(e) => {\n          setNote({ ...note, body: e.target.value });\n        }}\n        value={note?.body}\n      ></textarea>\n    </div>\n  );\n};\n\nexport default NotePage;\n\n// could use {match} in react router v4 and v5\n\n//  import React from 'react';\n\n//  const NotePage = ({match}) => {\n//  let noteId = match.params.id\n//    return <div> Single Page {noteId}</div>;\n//  };\n\n//  export default NotePage;\n","/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/notes_app/frontend/src/components/AddButton.js",[],[],"/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/notes_app/frontend/src/components/ListItem.js",[],[],{"ruleId":"46","severity":1,"message":"47","line":3,"column":10,"nodeType":"48","messageId":"49","endLine":3,"endColumn":23},{"ruleId":"46","severity":1,"message":"50","line":4,"column":10,"nodeType":"48","messageId":"49","endLine":4,"endColumn":14},{"ruleId":"51","severity":1,"message":"52","line":13,"column":6,"nodeType":"53","endLine":13,"endColumn":14,"suggestions":"54"},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNote'. Either include it or remove the dependency array.","ArrayExpression",["55"],{"desc":"56","fix":"57"},"Update the dependencies array to be: [getNote, noteId]",{"range":"58","text":"59"},[405,413],"[getNote, noteId]"]